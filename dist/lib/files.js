import { __awaiter } from "tslib";
import fs from "node:fs";
import path from "node:path";
export const resolvePath = (fileDir = "package.json") => {
    return path.resolve(fileDir);
};
export const saveResultAsFileMemory = (resultString) => __awaiter(void 0, void 0, void 0, function* () {
    let dateTime = new String(Date.now());
    const filePathMarkdown = resolvePath(`../llama.storage/markdown/${dateTime}.md`);
    const filePathRaw = resolvePath(`../llama.storage/utf8/${dateTime}.txt`);
    fs.writeFileSync(filePathMarkdown, `${resultString}`, { flag: 'a+', "encoding": "utf8" });
    fs.writeFileSync(filePathRaw, `${resultString}`, { flag: "a+", "encoding": "utf8" });
    console.log(`[files]`, `Stored Dialog in Markdown format and Raw UTF8 Text format.`);
    return;
});
const resolveCurrWorkDir = () => path.resolve(process.cwd());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXMuanMiLCJzb3VyY2VSb290Ijoic3JjLyIsInNvdXJjZXMiOlsibGliL2ZpbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDekIsT0FBTyxJQUFJLE1BQU0sV0FBVyxDQUFDO0FBRTdCLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLFVBQWtCLGNBQWMsRUFBRSxFQUFFO0lBQzVELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNqQyxDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxDQUFPLFlBQVksRUFBRSxFQUFFO0lBQ3pELElBQUksUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sZ0JBQWdCLEdBQUcsV0FBVyxDQUFDLDZCQUE2QixRQUFRLEtBQUssQ0FBQyxDQUFDO0lBQ2pGLE1BQU0sV0FBVyxHQUFHLFdBQVcsQ0FBQyx5QkFBeUIsUUFBUSxNQUFNLENBQUMsQ0FBQztJQUV6RSxFQUFFLENBQUMsYUFBYSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsWUFBWSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzFGLEVBQUUsQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLEdBQUcsWUFBWSxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBRXJGLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLDREQUE0RCxDQUFDLENBQUM7SUFDckYsT0FBTztBQUNYLENBQUMsQ0FBQSxDQUFDO0FBRUYsTUFBTSxrQkFBa0IsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gXCJub2RlOmZzXCI7XHJcbmltcG9ydCBwYXRoIGZyb20gXCJub2RlOnBhdGhcIjtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNvbHZlUGF0aCA9IChmaWxlRGlyOiBzdHJpbmcgPSBcInBhY2thZ2UuanNvblwiKSA9PiB7XHJcbiAgICByZXR1cm4gcGF0aC5yZXNvbHZlKGZpbGVEaXIpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgc2F2ZVJlc3VsdEFzRmlsZU1lbW9yeSA9IGFzeW5jIChyZXN1bHRTdHJpbmcpID0+IHtcclxuICAgIGxldCBkYXRlVGltZSA9IG5ldyBTdHJpbmcoRGF0ZS5ub3coKSk7XHJcblxyXG4gICAgY29uc3QgZmlsZVBhdGhNYXJrZG93biA9IHJlc29sdmVQYXRoKGAuLi9sbGFtYS5zdG9yYWdlL21hcmtkb3duLyR7ZGF0ZVRpbWV9Lm1kYCk7XHJcbiAgICBjb25zdCBmaWxlUGF0aFJhdyA9IHJlc29sdmVQYXRoKGAuLi9sbGFtYS5zdG9yYWdlL3V0ZjgvJHtkYXRlVGltZX0udHh0YCk7XHJcblxyXG4gICAgZnMud3JpdGVGaWxlU3luYyhmaWxlUGF0aE1hcmtkb3duLCBgJHtyZXN1bHRTdHJpbmd9YCwgeyBmbGFnOiAnYSsnLCBcImVuY29kaW5nXCI6IFwidXRmOFwiIH0pO1xyXG4gICAgZnMud3JpdGVGaWxlU3luYyhmaWxlUGF0aFJhdywgYCR7cmVzdWx0U3RyaW5nfWAsIHsgZmxhZzogXCJhK1wiLCBcImVuY29kaW5nXCI6IFwidXRmOFwiIH0pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGBbZmlsZXNdYCwgYFN0b3JlZCBEaWFsb2cgaW4gTWFya2Rvd24gZm9ybWF0IGFuZCBSYXcgVVRGOCBUZXh0IGZvcm1hdC5gKTtcclxuICAgIHJldHVybjtcclxufTtcclxuXHJcbmNvbnN0IHJlc29sdmVDdXJyV29ya0RpciA9ICgpID0+IHBhdGgucmVzb2x2ZShwcm9jZXNzLmN3ZCgpKTsiXX0=